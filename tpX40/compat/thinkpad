// [jpw]  The keyboard mappings for the ThinkPad X40.
//	  This file should be named "thinkpad"


// The ThinkPad has no separate keypad keys.  By default, when NumLock
// is active, the overlayed keypad keys generate the bona-fide keypad
// number-keycodes.  Even better, Shift a keypad key generates the
// actual motion-keypad keycodes!  :)  Therefore, there is no reason
// to alter the default X behavior.

// Indeed, the only things that need altering for a ThinkPad are:
//   1. Get rid of Shift+NumLock being bound to ANYTHING.
//
//      When you press any "normal" keyboard key, it generates a
//      scancode (keycode in X-parlance).  That includes the Shift,
//      Ctrl, and Alt keys.
//      So, on a ThinkPad, Shift+ScrollLock generates the *hardware*
//      keycodes of NumLock *and* Shift.  There is NO unshifted
//      NumLock.
//
//   2. Enabling NumLock by default when starting X.
//
//      For a desktop keyboard, this is fine.  For a laptop, it's
//      pointless.  For the ThinkPads, it's both pointless AND
//      annoying!


//=============================================================================
//  Compatibility
//
//  which should really be known as "Actions"
//=============================================================================


// Actions for the special ThinkPad keys.
//
// These are the defaults.


default partial
xkb_compatibility "default" {
    virtual_modifiers Alt,AltGr,NumLock,Super,Hyper;

    // FIXME:  These don't work as-is because we need to enable mousekeys
    //    in order for the PointerButton() action to take place.
    //
    //    Note, however, that KDE recognizes the wheel-scroll buttons,
    //    mousekeys or not, if you enable
    //    Peripherals->Mouse->Mouse_Navigation. 
    interpret Pointer_Button4 {
        repeat= True;
        action= PointerButton(button=4);
    };
    interpret Pointer_Button5 {
        repeat= True;
        action= PointerButton(button=5);
    };

    interpret.repeat= False;

    // Attempt to stop the Super_* modifier keys from repeating.
    // FIXME:  Well, in theory, it should.  At the moment, it doesn't.  :P
    interpret Super_L {
        repeat= False;
        action= LatchMods(modifiers=Super);
    };
    interpret Super_R {
        repeat= False;
        action= SetMods(modifiers=Super);
    };

    // Fix NumLock so it can be disabled at X startup.
    //
    // A ThinkPad keyboard has no independent keypad keys.  So
    // enabling NumLock at startup just creates confusion.
    //
    // For KDE,  you should also disable NumLock on startup in KDE's
    // Peripherals->Keyboard Control Panel.
    //
    indicator "Num Lock" {
        allowExplicit;
        drivesKeyboard;
        whichModState= Locked;
        modifiers= NumLock;
    };

    // TEST SECTION:
    // Tmp blocks for testing purposes.  Remove at later date.
};


partial
xkb_compatibility "nonRepeatingWheelButtons" {
    virtual_modifiers Alt,AltGr,NumLock,Super,Hyper;

    interpret.repeat= False;

    // See notes in the "default" config regarding these two.
    interpret Pointer_Button4 {
        action= PointerButton(button=4);
    };
    interpret Pointer_Button5 {
        action= PointerButton(button=5);
    };
};
